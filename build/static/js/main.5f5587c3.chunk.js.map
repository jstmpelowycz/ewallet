{"version":3,"sources":["components/Utilities/confirmAuth.js","components/UI/Input.js","components/UI/Button.js","store/user.js","components/Auth/AuthCreateAccount.js","components/Auth/AuthHome.js","components/Auth/AuthLogin.js","components/Auth/CreateAccount.js","components/Pages/Auth.js","components/UI/Charts/colors.js","components/UI/Charts/PieChart.js","components/UI/Charts/BarChart.js","components/UI/DashboardCard.js","components/Pages/Dashboard/DashboardChart.js","components/Pages/Dashboard/DashboardLegendItem.js","components/Pages/Dashboard/DashboardLegend.js","components/Pages/Dashboard/DashboardExpenseItem.js","components/Pages/Dashboard/DashboardExpenses.js","components/UI/Navigation/AddIncome.js","components/UI/Navigation/AddExpense.js","components/UI/Navigation/Navigation.js","components/UI/LoadingSpinner.js","components/Pages/Dashboard/DashboardTaxes.js","components/Pages/Dashboard/Dashboard.js","components/Pages/Greet.js","components/Pages/Layout.js","App.js","store/store.js","index.js"],"names":["exports","confirmAuth","url","enteredEmail","enteredPassword","history","route","func","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","error","message","Error","replace","catch","err","alert","Input","React","forwardRef","props","ref","className","type","placeholder","required","onChange","value","autoFocus","readOnly","max","Button","btnClass","onClick","children","userSlice","createSlice","name","initialState","userId","userData","expenses","totalExpenses","reducers","setUserId","state","action","payload","setUserData","setTotalExpenses","setAllExpenses","addExpense","push","logoutUser","userActions","actions","AuthCreateAccount","dispatch","useDispatch","useHistory","path","useRouteMatch","useState","user","setUser","useEffect","setPassword","confirm","setConfirm","passwordVisible","setPasswordVisible","confirmVisible","setConfirmVisible","isEqual","length","emailInputRef","useRef","passwordInputRef","confirmPassInputRef","passwordVisibility","prevState","confirmVisibility","onSubmit","event","preventDefault","current","target","to","AuthHome","pathname","useLocation","AuthLogin","CreateAccount","metaData","useSelector","enteredFirstNameRef","enteredLastNameRef","enteredAgeRef","enteredFirstName","enteredLastName","enteredAge","localId","firstName","lastName","age","categories","category","amount","console","log","min","id","defaultValue","hidden","Auth","exact","colors","green","yellow","blue","bordeaux","lightgrey","PieChartDisplay","valueOf","am","toFixed","startAngle","paddingAngle","animate","animationDuration","animationEasing","title","color","BarChart","labels","datasets","label","backgroundColor","Object","values","DashboardCard","cardClass","ChartType","months","DashboardChart","currentMonth","Date","getMonth","chart","setChart","PieChart","DashboardLegendItem","DashboardLegend","items","map","item","i","toUpperCase","slice","DashboardExpenseItem","toLowerCase","price","JSONToExcelButton","fileName","toLocaleString","month","getFullYear","btnClassName","DashboardExpenses","reversed","reverse","expense","AddIncome","setTotalIncome","incomeAmountRef","key","enteredIncomeAmount","Number","localStorage","getItem","nextState","setItem","String","AddExpense","onAddExpense","enteredExpenseNameRef","enteredExpenseAmountRef","enteredCategoryRef","enteredAmount","expenseName","enteredExpenseName","enteredCategory","find","categoryIndex","indexOf","splice","replaceCategory","array","index","elements","insertAt","Navigation","totalIncome","addExpenseOpen","setAddExpenseOpen","addIncomeOpen","setAddIncomeOpen","applyDefault","removeItem","LoadingSpinner","DashboardTaxes","tax","setTax","esf","setESF","pdfo","setPDFO","vz","setVZ","showResults","setShowResults","enteredSalaryRef","calculate","Math","round","Details","ProgressBar","style","height","variant","now","enteredSalary","taxCalculated","Dashboard","initialTotalIncome","isLoading","setIsLoading","dataLoaded","setDataLoaded","response","Greet","setTimeout","Layout","App","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f5587c3.chunk.js","sourcesContent":["exports.confirmAuth = (\n  url,\n  enteredEmail,\n  enteredPassword,\n  history,\n  route,\n  func\n) => {\n  fetch(url, {\n    method: \"POST\",\n    body: JSON.stringify({\n      email: enteredEmail,\n      password: enteredPassword,\n      returnSecureToken: true,\n    }),\n    headers: { \"Content-Type\": \"application/json\" },\n  })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then((data) => {\n          const errorMessage = data.error.message;\n          throw new Error(errorMessage);\n        });\n      }\n    })\n    .then((data) => {\n      func(data);\n      history.replace(`${route}`);\n    })\n    .catch((err) => {\n      alert(err);\n    });\n};\n","import React from \"react\";\n\nconst Input = React.forwardRef((props, ref) => {\n\n  return (\n    <input\n      className=\"input\"\n      type={props.type}\n      placeholder={props.placeholder}\n      required={props.required}\n      ref={ref}\n      onChange={props.onChange}\n      value={props.value}\n      autoFocus={props.autoFocus}\n      readOnly={props.readOnly}\n      max={props.max}\n    />\n  );\n});\n\nexport default Input;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Button = (props) => {\n  const {btnClass} = props;\n\n  return (\n    <button\n      type={props.type}\n      onClick={props.onClick}\n      className={`primary-btn ${btnClass}`}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  btnClass: PropTypes.string,\n}\n\nexport default Button;\n","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst userSlice = createSlice({\n  name: \"user\",\n\n  initialState: {\n    userId: {},\n    userData: {},\n    expenses: [],\n    totalExpenses: 0,\n  },\n\n  reducers: {\n    setUserId(state, action) {\n      state.userId = action.payload;\n    },\n\n    setUserData(state, action) {\n      state.userData = action.payload;\n    },\n\n    setTotalExpenses(state, action) {\n      state.totalExpenses = action.payload;\n    },\n\n    setAllExpenses(state, action) {\n      state.expenses = action.payload;\n    },\n\n    addExpense(state, action) {\n      state.expenses.push(action.payload);\n    },\n\n    logoutUser(state) {\n      state.userId = \"\";\n      state.userData = \"\";\n      state.expenses = [];\n      state.totalExpenses = 0;\n    },\n  },\n});\n\nexport const userActions = userSlice.actions;\n\nexport default userSlice.reducer;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { Link, useHistory, useRouteMatch } from \"react-router-dom\";\nimport Input from \"../UI/Input\";\nimport Button from \"../UI/Button\";\nimport { useDispatch } from \"react-redux\";\nimport { userActions } from \"../../store/user\";\nimport { confirmAuth } from \"../Utilities/confirmAuth\";\n\nconst AuthCreateAccount = () => {\n  const dispatch = useDispatch();\n  const APIKey = \"AIzaSyAmDf_ayrM-XIbiKeLlrcvW3nrxx5KxFJE\";\n  const history = useHistory();\n\n  const { path } = useRouteMatch();\n\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    dispatch(userActions.setUserId(user));\n  }, [user, dispatch]);\n\n  const [password, setPassword] = useState(\"\");\n  const [confirm, setConfirm] = useState(\"\");\n\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [confirmVisible, setConfirmVisible] = useState(false);\n\n  const isEqual = password === confirm && (\n    password.length > 0 && confirm.length > 0\n  );\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const confirmPassInputRef = useRef();\n\n  const passwordValue = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const confirmValue = (event) => {\n    setConfirm(event.target.value);\n  };\n\n  const passwordVisibility = () => {\n    setPasswordVisible((prevState) => !prevState);\n  };\n\n  const confirmVisibility = () => {\n    setConfirmVisible((prevState) => !prevState);\n  };\n\n  const submitForm = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current?.value;\n    const enteredPassword = passwordInputRef.current?.value;\n    const enteredConfirmPass = confirmPassInputRef.current?.value;\n\n    if (enteredConfirmPass !== enteredPassword) {\n      alert(\"Passwords must match.\");\n\n      return;\n    }\n\n    const url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${APIKey}`;\n\n    confirmAuth(\n      url,\n      enteredEmail,\n      enteredPassword,\n      history,\n      `${path}/new-user`,\n      setUser\n    );\n  };\n\n  return (\n    <div className=\"confirm\">\n      <div className=\"confirm__container\">\n        <p className=\"confirm__container--p\">Create New Account</p>\n        <form className=\"confirm__container--form\" onSubmit={submitForm}>\n          <div className=\"confirm__container--form-input\">\n            <span className=\"fas fa-at icon\"></span>\n\n            <Input\n              type=\"email\"\n              placeholder=\"Email\"\n              ref={emailInputRef}\n              required=\"required\"\n              autoFocus={\"autoFocus\"}\n            />\n          </div>\n          <div className=\"confirm__container--form-input\">\n            <span className=\"fas fa-lock icon\"></span>\n\n            <Input\n              type={!passwordVisible ? \"password\" : \"text\"}\n              onChange={passwordValue}\n              ref={passwordInputRef}\n              value={password}\n              placeholder=\"Password\"\n              required\n            />\n\n            {password.length > 0 && !passwordVisible && (\n              <span\n                className=\"far fa-eye icon\"\n                onClick={passwordVisibility}\n              ></span>\n            )}\n\n            {password.length > 0 && passwordVisible && (\n              <span\n                className=\"fas fa-eye icon test\"\n                onClick={passwordVisibility}\n              ></span>\n            )}\n          </div>\n\n          <div className=\"confirm__container--form-input\">\n            {!isEqual && (\n              <span className=\"fas fa-lock-open icon\"></span>\n            )}\n\n            {isEqual && (\n              <span className=\"fas fa-lock icon\"></span>\n            )}\n\n            <Input\n              type={!confirmVisible ? \"password\" : \"text\"}\n              ref={confirmPassInputRef}\n              onChange={confirmValue}\n              placeholder=\"Confirm Password\"\n              value={confirm}\n              required\n            />\n\n            {confirm.length > 0 && !confirmVisible && (\n              <span\n                className=\"far fa-eye icon\"\n                onClick={confirmVisibility}\n              ></span>\n            )}\n\n            {confirm.length > 0 && confirmVisible && (\n              <span\n                className=\"fas fa-eye icon test\"\n                onClick={confirmVisibility}\n              ></span>\n            )}\n\n          </div>\n          <Button type=\"submit\">Create Account</Button>\n        </form>\n\n        <p className=\"confirm__change-auth\">\n          Already have an account?{\" \"}\n\n          <Link to=\"/auth/login\">\n            <span>Sign in here</span>\n          </Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthCreateAccount;\n","import React from \"react\";\nimport Button from \"../UI/Button\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nconst AuthHome = () => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n\n  const login = () => {\n    history.push(`${pathname}/login`);\n  };\n\n  const createAccount = () => {\n    history.push(`${pathname}/create-account`);\n  };\n\n  return (\n    <div className=\"auth\">\n      <div className=\"auth__attention\">\n        <h1 className=\"auth__attention--title\">\n          E<span>Wallet</span>\n        </h1>\n        <p className=\"auth__attention--slogan\">Save Your Money Wisely</p>\n      </div>\n\n      <div className=\"auth__option\">\n        <div className=\"auth__option--container\">\n          <Button\n            type=\"button\"\n            btnClass=\"auth__option--btn\"\n            onClick={login}\n          >\n            Login\n          </Button>\n          \n          <Button\n            type=\"button\"\n            btnClass=\"auth__option--btn\"\n            onClick={createAccount}\n          >\n            Create Account\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthHome;\n","import React, {useRef, useState} from \"react\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport {confirmAuth} from \"../Utilities/confirmAuth\";\nimport {useDispatch} from \"react-redux\";\nimport {userActions} from \"../../store/user\";\nimport {useEffect} from \"react\";\nimport Input from \"../UI/Input\";\nimport Button from \"../UI/Button\";\n\nconst AuthLogin = () => {\n  const APIKey = \"AIzaSyAmDf_ayrM-XIbiKeLlrcvW3nrxx5KxFJE\";\n  const url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${APIKey}`;\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [user, setUser] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordVisible, setPasswordVisible] = useState(false);\n\n  useEffect(() => {\n    dispatch(userActions.setUserId(user));\n  }, [user, dispatch]);\n\n  const passwordValue = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const passwordVisibility = () => {\n    setPasswordVisible((prevState) => !prevState);\n  };\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const submitForm = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current?.value;\n    const enteredPassword = passwordInputRef.current?.value;\n\n    confirmAuth(\n      url,\n      enteredEmail,\n      enteredPassword,\n      history,\n      \"/greet\",\n      setUser\n    );\n  };\n\n  return (\n    <div className=\"confirm\">\n      <div className=\"confirm__container\">\n        <p className=\"confirm__container--p\">\n          Sign In to Your Account\n        </p>\n        <form\n          className=\"confirm__container--form\"\n          onSubmit={submitForm}\n        >\n          <div className=\"confirm__container--form-input\">\n            <span className=\"fas fa-at icon\"></span>\n\n            <Input\n              type=\"email\"\n              placeholder=\"Email\"\n              ref={emailInputRef}\n              autoFocus={\"autoFocus\"}\n            />\n          </div>\n          <div className=\"confirm__container--form-input\">\n            <span className=\"fas fa-lock icon\"></span>\n\n            <Input\n              type={!passwordVisible ? \"password\" : \"text\"}\n              placeholder=\"Password\"\n              ref={passwordInputRef}\n              value={password}\n              onChange={passwordValue}\n            />\n\n            {password.length > 0 && !passwordVisible && (\n              <span\n                className=\"far fa-eye icon\"\n                onClick={passwordVisibility}\n              ></span>\n            )}\n\n            {password.length > 0 && passwordVisible && (\n              <span\n                className=\"fas fa-eye icon test\"\n                onClick={passwordVisibility}\n              ></span>\n            )}\n\n          </div>\n          <Button type=\"submit\">Login</Button>\n        </form>\n\n        <p className=\"confirm__forgot-password\">\n          Forgot Password?\n        </p>\n        <p className=\"confirm__change-auth\">\n          Don't have an account?{\" \"}\n\n          <Link to=\"/auth/create-account\">\n            <span>Sign up here</span>\n          </Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthLogin;\n","import React, { useRef } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Input from \"../UI/Input\";\nimport Button from \"../UI/Button\";\nimport { useSelector } from \"react-redux\";\n\nconst CreateAccount = () => {\n  const history = useHistory();\n  const metaData = useSelector((state) => state.user.userId);\n\n  const enteredFirstNameRef = useRef();\n  const enteredLastNameRef = useRef();\n  const enteredAgeRef = useRef();\n\n  const submitForm = (event) => {\n    event.preventDefault();\n\n    const enteredFirstName = enteredFirstNameRef.current?.value;\n    const enteredLastName = enteredLastNameRef.current?.value;\n    const enteredAge = enteredAgeRef.current?.value;\n\n    fetch(\n      `https://trackwise-b7eaf-default-rtdb.firebaseio.com/users/${metaData.localId}.json`,\n      {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          firstName: enteredFirstName,\n          lastName: enteredLastName,\n          age: enteredAge,\n          email: metaData.email,\n          categories: [\n            {\n              category: \"bills\",\n              amount: 0,\n            },\n            {\n              category: \"groceries\",\n              amount: 0,\n            },\n            {\n              category: \"transportation\",\n              amount: 0,\n            },\n            {\n              category: \"luxury\",\n              amount: 0,\n            },\n            {\n              category: \"other\",\n              amount: 0,\n            },\n          ],\n          totalExpenses: 0,\n        }),\n      }\n    ).catch(error => console.log(error));\n\n    history.push(\"/greet\");\n  };\n\n  return (\n    <div className=\"confirm\">\n      <div className=\"confirm__container\">\n        <p className=\"confirm__container--p\">\n          Sign In to Your Account\n        </p>\n        <form\n          className=\"confirm__container--form\"\n          onSubmit={submitForm}\n        >\n          <div className=\"confirm__container--form-input\">\n            <Input\n              type=\"text\"\n              placeholder=\"First Name\"\n              required=\"required\"\n              ref={enteredFirstNameRef}\n              autoFocus={\"autoFocus\"}\n            />\n          </div>\n\n          <div className=\"confirm__container--form-input\">\n            <Input\n              type=\"text\"\n              placeholder=\"Last Name (optional)\"\n              ref={enteredLastNameRef}\n            />\n          </div>\n\n          <div className=\"confirm__container--form-input\">\n            <Input\n              type=\"number\"\n              min=\"0\"\n              max=\"100\"\n              placeholder=\"Age (optional)\"\n              ref={enteredAgeRef}\n            />\n          </div>\n\n          <div className=\"confirm__container--dropdown\">\n            <select name=\"goals\" id=\"goals\" required>\n              <option defaultValue hidden>\n                What are your goals with this app?\n              </option>\n\n              <option>Better budget managing</option>\n              <option>Save money over a longer period of time</option>\n              <option>Fill in for future choice</option>\n              <option>Another fill in for another future choice</option>\n              <option>Other</option>\n            </select>\n          </div>\n\n          <Button type=\"submit\">Create Account</Button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateAccount;\n","import React from \"react\";\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\n\nimport AuthCreateAccount from \"../Auth/AuthCreateAccount\";\nimport AuthHome from \"../Auth/AuthHome\";\nimport AuthLogin from \"../Auth/AuthLogin\";\nimport CreateAccount from \"../Auth/CreateAccount\";\n\nconst Auth = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route path={path} exact>\n        <AuthHome />\n      </Route>\n      <Route path={`${path}/login`}>\n        <AuthLogin />\n      </Route>\n      <Route path={`${path}/create-account`} exact>\n        <AuthCreateAccount />\n      </Route>\n      <Route path={`${path}/create-account/new-user`}>\n        <CreateAccount />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default Auth;\n","export const colors = {\n  green: '#39af7e',\n  yellow: '#ebc23a',\n  blue: '#1e93ff',\n  bordeaux: '#ad3636',\n  lightgrey: '#ced2d9',\n};\n","import React from \"react\";\nimport {PieChart} from \"react-minimal-pie-chart\";\nimport {useSelector} from \"react-redux\";\nimport {colors} from \"./colors\";\n\nconst PieChartDisplay = () => {\n  const totalExpenses = useSelector((state) => state.user.totalExpenses);\n  const categories = useSelector((state) => state.user.userData.categories);\n\n  const valueOf = (am) => {\n    const amount = +((am / totalExpenses) * 100).toFixed(2);\n    return amount;\n  };\n\n  return (\n    <div className=\"pie-chart\">\n      <PieChart\n        startAngle={-90}\n        paddingAngle={3}\n        animate={true}\n        animationDuration={1250}\n        animationEasing={\"ease\"}\n        data={[\n          {\n            title: \"bills\",\n            value: valueOf(categories[0].amount),\n            color: colors.green,\n          },\n          {\n            title: \"groceries\",\n            value: valueOf(categories[1].amount),\n            color: colors.yellow,\n          },\n          {\n            title: \"transportation\",\n            value: valueOf(categories[2].amount),\n            color: colors.blue,\n          },\n          {\n            title: \"luxury\",\n            value: valueOf(categories[3].amount),\n            color: colors.bordeaux,\n          },\n          {\n            title: \"other\",\n            value: valueOf(categories[4].amount),\n            color: colors.lightgrey,\n          },\n        ]}\n      />\n      <div className=\"pie-chart__donut\">\n        <div>\n          <p>Total:</p>\n          <p>\n            <strong>${totalExpenses.toFixed(2)}</strong>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PieChartDisplay;\n","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { useSelector } from \"react-redux\";\nimport {colors} from \"./colors\";\n\nconst BarChart = () => {\n  const categories = useSelector((state) => state.user.userData.categories);\n\n  return (\n    <div>\n      <Bar\n        data={{\n          labels: [\"\", \"\", \"\", \"\", \"\"],\n          datasets: [\n            {\n              label: \"Amount Spent\",\n              data: [\n                categories[0].amount,\n                categories[1].amount,\n                categories[2].amount,\n                categories[3].amount,\n                categories[4].amount,\n              ],\n              backgroundColor: [\n                ...Object.values(colors),\n              ],\n            },\n          ],\n        }}\n      />\n    </div>\n  );\n};\n\nexport default BarChart;\n","import React from \"react\";\n\nconst DashboardCard = (props) => {\n  return (\n    <div className={`dashboard-card ${props.cardClass}`}>\n      <p className=\"dashboard-card__title\">{props.title}</p>\n      <div className=\"dashboard-card__container\">\n        <ul>{props.children}</ul>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardCard;\n","import React, {useState} from \"react\";\nimport PieChart from \"../../UI/Charts/PieChart\";\nimport BarChart from \"../../UI/Charts/BarChart\";\nimport DashboardCard from \"../../UI/DashboardCard\";\n\nconst ChartType = {\n  Pie: \"pie\",\n  Line: \"line\",\n}\n\nconst months = [\n  [\"Jan\", 31],\n  [\"Feb\", 28],\n  [\"Mar\", 31],\n  [\"Apr\", 30],\n  [\"May\", 31],\n  [\"Jun\", 30],\n  [\"Jul\", 31],\n  [\"Aug\", 31],\n  [\"Sep\", 30],\n  [\"Oct\", 31],\n  [\"Nov\", 30],\n  [\"Dec\", 31],\n];\n\nconst DashboardChart = () => {\n  const date = new Date();\n  const currentMonth = date.getMonth();\n\n  const [chart, setChart] = useState(ChartType.Pie);\n\n  const setPieHandler = () => {\n    setChart(ChartType.Pie);\n  };\n\n  const setLineHandler = () => {\n    setChart(ChartType.Line);\n  };\n\n  return (\n    <DashboardCard cardClass=\"dashboard__chart--card\">\n      <div className=\"dashboard__chart\">\n        <div className=\"dashboard__chart-info\">\n          <p className=\"dashboard__chart-info--title\">Monthly Expenses</p>\n          <p className=\"dashboard__chart-info--date\">\n            {months[currentMonth][0]} 1 - {months[currentMonth][0]}{\" \"}\n            {months[currentMonth][1]}\n          </p>\n        </div>\n\n        {chart === ChartType.Pie && <PieChart/>}\n        {chart === ChartType.Line && <BarChart/>}\n\n        <div className=\"dashboard__chart-icons\">\n          <span\n            className={\n              chart === ChartType.Pie\n                ? \"fas fa-chart-pie dashboard__chart-icon active\"\n                : \"fas fa-chart-pie dashboard__chart-icon\"\n            }\n            onClick={setPieHandler}\n          ></span>\n          <span\n            className={\n              chart === ChartType.Line\n                ? \"far fa-chart-bar dashboard__chart-icon dashboard__chart-icon--bar active\"\n                : \"far fa-chart-bar dashboard__chart-icon dashboard__chart-icon--bar\"\n            }\n            onClick={setLineHandler}\n          ></span>\n        </div>\n      </div>\n    </DashboardCard>\n  );\n};\n\nexport default DashboardChart;\n","import React from \"react\";\n\nconst DashboardLegendItem = (props) => {\n  return (\n    <li className=\"legend__item\">\n      <div className=\"legend__item--description\">\n        <div\n          className={`legend__item--circle legend__item--circle-${props.id}`}\n        ></div>\n        <p>{props.category}</p>\n      </div>\n      <div className=\"legend__item--line\">\n        <div className=\"legend__item--line-through\"></div>\n      </div>\n      <p className=\"legend__item--price\">\n        ${props.amount.toFixed(2)}\n      </p>\n    </li>\n  );\n};\n\nexport default DashboardLegendItem;\n","import React from \"react\";\nimport DashboardCard from \"../../UI/DashboardCard\";\nimport DashboardLegendItem from \"./DashboardLegendItem\";\nimport {useSelector} from \"react-redux\";\n\nconst DashboardLegend = () => {\n  const items = useSelector(({user}) => user.userData.categories);\n\n  return (\n    <DashboardCard title=\"Legend\" cardClass=\"dashboard__legend\">\n      {items.map((item, i) => (\n        <DashboardLegendItem\n          key={item.category}\n          category={\n            item.category[0].toUpperCase() +\n            item.category.slice(1, item.category.length)\n          }\n          amount={item.amount}\n          id={i + 1}\n        />\n      ))}\n    </DashboardCard>\n  );\n};\n\nexport default DashboardLegend;\n","import React from \"react\";\n\nconst DashboardExpenseItem = (props) => {\n  return (\n    <li className=\"expense__item\">\n      <div className=\"expense__item-description\">\n        <div\n          className={`expense__item-tag ${props.category.toLowerCase()}`}\n        ></div>\n        <p className=\"expense__item-title\">{props.title}</p>\n      </div>\n      <p className=\"expense__item-price\">${props.price}</p>\n    </li>\n  );\n};\n\nexport default DashboardExpenseItem;\n","import React from \"react\";\nimport DashboardCard from \"../../UI/DashboardCard\";\nimport DashboardExpenseItem from \"./DashboardExpenseItem\";\nimport {useSelector} from \"react-redux\";\nimport {JsonToExcel as JSONToExcel} from \"react-json-to-excel\";\n\nconst JSONToExcelButton = (props) => {\n  return (\n      <JSONToExcel\n          title=\"Download as Excel\"\n          data={props.expenses}\n          fileName={`Report-${new Date().toLocaleString(\"en-US\", { month: \"long\" })}${new Date().getFullYear()}`}\n          btnClassName=\"primary-btn primary-btn--excel\"\n      />\n  );\n}\n\nconst DashboardExpenses = () => {\n  const expenses = useSelector((state) => state?.user.expenses);\n  const reversed = expenses.map((item) => item).reverse();\n  console.log(reversed);\n\n  return (\n    <DashboardCard title=\"Expenses\" cardClass=\"expense\">\n      {reversed.map((expense) => (\n        <DashboardExpenseItem\n          title={expense.title}\n          price={expense.price}\n          category={expense.category}\n        />\n      ))}\n      <JSONToExcelButton expenses={expenses}></JSONToExcelButton>\n    </DashboardCard>\n  );\n};\n\nexport default DashboardExpenses;\n","import React, {useRef} from \"react\";\nimport Input from \"../Input\";\nimport Button from \"../Button\";\nimport PropTypes from \"prop-types\";\nimport {useSelector} from \"react-redux\";\n\nexport const AddIncome = (props) => {\n  const {\n    className,\n    setTotalIncome,\n    onSubmit,\n  } = props;\n\n  const incomeAmountRef = useRef();\n  const id = useSelector(({user}) => user.userId.localId);\n  const key = `${id}_income-total`;\n\n  const submitForm = (event) => {\n    event.preventDefault();\n\n    const enteredIncomeAmount = incomeAmountRef.current?.value;\n\n    setTotalIncome((prevState = Number(localStorage.getItem(key))) => {\n      const nextState = prevState + Number(enteredIncomeAmount);\n\n      localStorage.setItem(key, String(nextState));\n\n      return nextState;\n    });\n\n    onSubmit();\n  };\n\n  return (\n    <form\n      className={className}\n      onSubmit={submitForm}\n    >\n      <div className=\"confirm__container--form-input\">\n        <Input\n          type=\"number\"\n          ref={incomeAmountRef}\n          placeholder=\"Income Amount\"\n          required\n        />\n      </div>\n      <Button btnClass=\"btn\" type=\"submit\">\n        Add Income\n      </Button>\n    </form>\n  )\n};\n\nAddIncome.propTypes = {\n  className: PropTypes.string,\n  setTotalIncome: PropTypes.func,\n  onSubmit: PropTypes.func,\n};\n","import Input from \"../Input\";\nimport Button from \"../Button\";\nimport React, {useRef} from \"react\";\nimport {userActions} from \"../../../store/user\";\nimport PropTypes from \"prop-types\";\nimport {useSelector} from \"react-redux\";\n\nconst insertAt = (array, index, ...elements) => {\n  array.splice(index, 0, ...elements);\n};\n\nexport const AddExpense = (props) => {\n  const {\n    onAddExpense,\n    className,\n    user,\n    metaData,\n    dispatch,\n    onSubmit,\n  } = props;\n\n  const expenses = useSelector(({user}) => user.expenses);\n  const totalExpenses = useSelector(({user}) => user.totalExpenses);\n  const id = useSelector(({user}) => user.userId.localId);\n  const key = `${id}_income-total`;\n\n  const enteredExpenseNameRef = useRef();\n  const enteredExpenseAmountRef = useRef();\n  const enteredCategoryRef = useRef();\n\n  const submitForm = (event) => {\n    event.preventDefault();\n\n    const enteredAmount = enteredExpenseAmountRef.current?.value;\n\n    const totalIncome = Number(localStorage.getItem(key));\n    const hasSufficientFunds = (totalIncome - enteredAmount) >= 0\n\n    if (!hasSufficientFunds) {\n      alert(\"Cannot perform action – insufficient funds\");\n      onSubmit();\n      return;\n    }\n\n    const expenseName = enteredExpenseNameRef.current?.value;\n    const enteredExpenseName = expenseName.toLowerCase()[0].toUpperCase() + expenseName.slice(1);\n    const enteredCategory = enteredCategoryRef.current?.value;\n    const categories = user.categories.map((category) => category);\n\n    const category = categories.find(\n      (category) => category.category === enteredCategory.toLowerCase()\n    );\n\n    const categoryIndex = categories.indexOf(category);\n\n    categories.splice(categoryIndex, 1);\n\n    const replaceCategory = {\n      amount: +category.amount + +enteredAmount,\n      category: category.category,\n    };\n\n    insertAt(categories, categoryIndex, replaceCategory);\n\n    onAddExpense((prevState) => {\n      const nextState = prevState - Number(enteredAmount);\n\n      localStorage.setItem(key, String(nextState));\n\n      return nextState;\n    });\n\n    fetch(\n      `https://trackwise-b7eaf-default-rtdb.firebaseio.com/users/${metaData.localId}.json`,\n      {\n        method: \"PATCH\",\n        headers: {\"Content-Type\": \"application/json\"},\n        body: JSON.stringify({\n          expenses: [\n            ...expenses,\n            {\n              category: enteredCategory,\n              price: enteredAmount,\n              title: enteredExpenseName,\n            },\n          ],\n          totalExpenses: totalExpenses + +enteredAmount,\n          categories: categories,\n        }),\n      }\n    )\n      .then((res) => res.json())\n      .then(() => {\n        dispatch(\n          userActions.addExpense({\n            category: enteredCategory,\n            price: enteredAmount,\n            title: enteredExpenseName,\n          })\n        );\n        dispatch(userActions.setTotalExpenses(+totalExpenses + +enteredAmount));\n        dispatch(\n          userActions.setUserData({\n            ...user,\n            categories: categories,\n          })\n        );\n      });\n\n    onSubmit();\n  };\n\n  return (\n    <form\n      className={className}\n      onSubmit={submitForm}\n    >\n      <div className=\"confirm__container--form-input\">\n        <Input\n          placeholder=\"Expense Name\"\n          type=\"text\"\n          ref={enteredExpenseNameRef}\n          required=\"required\"\n        />\n      </div>\n      <div className=\"confirm__container--form-input\">\n        <Input\n          type=\"number\"\n          placeholder=\"Expense Amount\"\n          ref={enteredExpenseAmountRef}\n          required=\"required\"\n        />\n      </div>\n      <select\n        name=\"category\"\n        id=\"category\"\n        ref={enteredCategoryRef}\n        required\n      >\n        <option defaultValue hidden>\n          Select a category\n        </option>\n        <option>Bills</option>\n        <option>Groceries</option>\n        <option>Transportation</option>\n        <option>Luxury</option>\n        <option>Other</option>\n      </select>\n      <Button btnClass=\"btn\" type=\"submit\">\n        Add Expense\n      </Button>\n    </form>\n  )\n}\n\nAddExpense.propTypes = {\n  className: PropTypes.string,\n  user: PropTypes.object,\n  metaData: PropTypes.object,\n  dispatch: PropTypes.func,\n  onAddExpense: PropTypes.func,\n  onSubmit: PropTypes.func,\n}\n","import React, {useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {userActions} from \"../../../store/user\";\nimport {useHistory} from \"react-router-dom\";\nimport Button from \"../Button\";\nimport {AddIncome} from \"./AddIncome\";\nimport {AddExpense} from \"./AddExpense\";\nimport PropTypes from \"prop-types\";\n\nconst Navigation = ({totalIncome, setTotalIncome}) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const userData = useSelector(({user}) => user.userData);\n  const metaData = useSelector(({user}) => user.userId);\n\n  const [addExpenseOpen, setAddExpenseOpen] = useState(false);\n  const [addIncomeOpen, setAddIncomeOpen] = useState(false);\n\n  const handleAddExpenseOpen = () => {\n    if (addIncomeOpen) {\n      setAddIncomeOpen((prevState) => !prevState);\n    }\n\n    setAddExpenseOpen((prevState) => !prevState);\n  };\n\n  const handleAddIncomeOpen = () => {\n    if (addExpenseOpen) {\n      setAddExpenseOpen((prevState) => !prevState);\n    }\n\n    setAddIncomeOpen((prevState) => !prevState);\n  }\n\n  const closeAddExpense = () => {\n    setAddExpenseOpen(false);\n  }\n\n  const closeAddIncome = () => {\n    setAddIncomeOpen(false);\n  }\n\n  const logoutUserHandler = () => {\n    dispatch(userActions.logoutUser({}));\n    localStorage.removeItem(\"localId\");\n    history.replace(\"/\");\n  };\n\n  return (\n    <nav className=\"dashboard__nav\">\n      <div className=\"dashboard__nav-info\">\n        <p className=\"dashboard__nav-user\">\n          {userData.firstName}'s Dashboard\n        </p>\n\n        <div className=\"dashboard__nav-controls\">\n          <Button\n            applyDefault={false}\n            onClick={handleAddIncomeOpen}\n            btnClass={\n              `dashboard__nav-dropdown${addIncomeOpen ? '--open' : ''} `\n              + 'dashboard__nav-dropdown'\n            }\n          >\n            Add Income\n          </Button>\n\n          <Button\n            applyDefault={false}\n            onClick={handleAddExpenseOpen}\n            btnClass={\n              `dashboard__nav-dropdown${addExpenseOpen ? '--open' : ''} `\n              + 'dashboard__nav-dropdown'\n            }\n          >\n            Add Expense\n          </Button>\n\n          <Button\n            btnClass=\"btn logout\"\n            onClick={logoutUserHandler}\n          >\n            Logout\n          </Button>\n        </div>\n      </div>\n\n      {addIncomeOpen && (\n        <AddIncome\n          className=\"dashboard__nav-form\"\n          setTotalIncome={setTotalIncome}\n          onSubmit={closeAddIncome}\n        />\n      )}\n\n      {addExpenseOpen && (\n        <AddExpense\n          className=\"dashboard__nav-form\"\n          user={userData}\n          metaData={metaData}\n          dispatch={dispatch}\n          totalIncome={totalIncome}\n          onAddExpense={setTotalIncome}\n          onSubmit={closeAddExpense}\n        />\n      )}\n    </nav>\n  );\n};\n\nNavigation.propTypes = {\n  totalIncome: PropTypes.number,\n  setTotalIncome: PropTypes.func,\n}\n\nexport default Navigation;\n","import React from \"react\";\n\nconst LoadingSpinner = () => {\n  return (\n    <div className=\"loading__container\">\n      <div className=\"fas fa-circle-notch loading__container--spinner\"></div>\n      <p>Please wait while we fetch your data</p>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React, {Fragment, useRef, useState} from \"react\";\nimport Input from \"../../UI/Input\";\nimport DashboardCard from \"../../UI/DashboardCard\";\nimport Button from \"../../UI/Button\";\nimport ProgressBar from 'react-bootstrap/ProgressBar'\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nconst DashboardTaxes = (props) => {\n  const [tax, setTax] = useState(0);\n  const [esf, setESF] = useState(0);\n  const [pdfo, setPDFO] = useState(0);\n  const [vz, setVZ] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n\n  const enteredSalaryRef = useRef();\n\n  const submitForm = (event) => {\n    event.preventDefault();\n\n    const enteredSalary = enteredSalaryRef.current?.value;\n    const taxCalculated = calculate(Number(enteredSalary));\n\n    setTax(taxCalculated);\n  }\n\n  const calculate = (value) => {\n    if (!value) {\n      return 0;\n    }\n\n    let esf;\n    const pdfo = value * 0.18;\n    const vz = value * 0.015;\n\n    if (value < 6500) {\n      esf = 1430;\n    } else {\n      esf = value * 0.22;\n    }\n\n    const tax = Math.round((esf + pdfo + vz) * 100) / 100;\n\n    setESF(Math.round((100 * esf) / tax));\n    setPDFO(Math.round((100 * pdfo) / tax));\n    setVZ(Math.round((100 * vz) / tax));\n    setShowResults(true);\n\n    return tax;\n  };\n\n  const Details = () => (\n    <div className=\"confirm__container--form-details\">\n      <details>\n        <summary>Details</summary>\n\n        <div className=\"confirm__container--form-progressBar\">\n          <ProgressBar style={{height: \"30px\"}}>\n            <ProgressBar variant=\"success\" now={esf} key={1}/>\n            <ProgressBar variant=\"warning\" now={pdfo} key={1}/>\n            <ProgressBar variant=\"danger\" now={vz} key={1}/>\n          </ProgressBar>\n        </div>\n\n        <li className=\"legend__taxItem\">\n          <div className=\"legend__taxItem--description\">\n            <div className={`legend__item--circle legend__item--circle-${6}`}></div>\n            <p>ЄСВ</p>\n          </div>\n          <div className=\"legend__taxItem--line\">\n            <div className=\"legend__taxItem--line-through\"></div>\n          </div>\n          <p className=\"legend__taxItem--meaning\"> — (Єдиний соціальний внесок) страховий внесок з метою\n            забезпечення захисту у випадках,\n            передбачених законодавством\n            (соціальні гарантії на випадок безробіття, нещасних випадків, пенсійне забезпечення тощо).\n          </p>\n        </li>\n        <li className=\"legend__taxItem\">\n          <div className=\"legend__taxItem--description\">\n            <div className={`legend__item--circle legend__item--circle-${7}`}></div>\n            <p>ПДФО</p>\n          </div>\n          <div className=\"legend__taxItem--line\">\n            <div className=\"legend__taxItem--line-through\"></div>\n          </div>\n          <p className=\"legend__taxItem--meaning\"> — (Податок з доходів фізичних осіб) загальнодержавний\n            податок, що стягується з доходів\n            фізичних осіб і нерезидентів, які отримують доходи з джерел їх\n            походження в Україні.\n          </p>\n        </li>\n        <li className=\"legend__taxItem\">\n          <div className=\"legend__taxItem--description\">\n            <div className={`legend__item--circle legend__item--circle-${8}`}></div>\n            <p>ВЗ</p>\n          </div>\n          <div className=\"legend__taxItem--line\">\n            <div className=\"legend__taxItem--line-through\"></div>\n          </div>\n          <p className=\"legend__taxItem--meaning\"> — (Військовий збір) це податок, для фізичних осіб\n            (резидентів і нерезидентів), який було запроваджено тимчасово для фінансування Збройних сил\n            України.\n          </p>\n        </li>\n      </details>\n    </div>\n  )\n\n\n  return (\n    <DashboardCard title=\"Calculate your taxes\">\n      <Fragment>\n        <form\n          className=\"dashboard__taxes--form\"\n          onSubmit={submitForm}\n        >\n          <div className=\"confirm__container--form-inputSalary\">\n            <Input\n              placeholder=\"Your salary\"\n              type=\"number\"\n              ref={enteredSalaryRef}\n              required=\"required\"\n              max=\"1000000\"\n            />\n\n            <select\n              name=\"country\"\n              id=\"country\"\n              required=\"required\">\n              <option defaultValue hidden>\n                Select country\n              </option>\n              <option>Ukraine</option>\n            </select>\n          </div>\n\n          <Button btnClass=\"btn\" type=\"submit\">Calculate</Button>\n\n          <div className=\"confirm__container--form-result\">\n            <h3>Your taxes:</h3>\n\n            <Input\n              value={\"₴ \" + tax}\n              readOnly=\"readOnly\"\n            />\n          </div>\n        </form>\n\n        {showResults ? <Details/> : null}\n      </Fragment>\n    </DashboardCard>\n  );\n};\n\nexport default DashboardTaxes;\n","import React, {useState, useEffect} from \"react\";\nimport DashboardChart from \"./DashboardChart\";\nimport DashboardLegend from \"./DashboardLegend\";\nimport DashboardExpenses from \"./DashboardExpenses\";\nimport Navigation from \"../../UI/Navigation/Navigation\";\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {userActions} from \"../../../store/user\";\nimport {Fragment} from \"react\";\nimport DashboardTaxes from \"./DashboardTaxes\";\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n  const id = useSelector(({user}) => user.userId.localId);\n\n  const key = `${id}_income-total`\n\n  let initialTotalIncome;\n\n  if (localStorage.getItem(key) === null) {\n    initialTotalIncome = 0;\n    localStorage.setItem(key, String(initialTotalIncome));\n  } else {\n    initialTotalIncome = Number(localStorage.getItem(key));\n  }\n\n  const [totalIncome, setTotalIncome] = useState(initialTotalIncome);\n  const [isLoading, setIsLoading] = useState(true);\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  useEffect(() => {\n    fetch(\"https://trackwise-b7eaf-default-rtdb.firebaseio.com/users.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        const user = data[id];\n\n        dispatch(userActions.setUserData(user));\n        dispatch(userActions.setTotalExpenses(user.totalExpenses));\n\n        setIsLoading(false);\n        setDataLoaded(true);\n\n        if (user.expenses) {\n          dispatch(userActions.setAllExpenses(user.expenses));\n        }\n      });\n  }, [dispatch, id]);\n\n  return (\n    <div className=\"dashboard\">\n      {isLoading && <LoadingSpinner/>}\n\n      {dataLoaded && (\n        <Fragment>\n          <Navigation\n            setTotalIncome={setTotalIncome}\n          />\n\n          <div className=\"dashboard__income\">\n            <p className=\"dashboard__income-amount\">\n              Total Income: ${totalIncome}\n            </p>\n          </div>\n\n          <div className=\"dashboard__view\">\n            <DashboardChart/>\n            <DashboardLegend/>\n          </div>\n\n          <DashboardExpenses/>\n          <DashboardTaxes />\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Greet = () => {\n  const history = useHistory();\n\n  setTimeout(() => {\n    history.push(\"/dashboard\");\n  }, 1500);\n\n  return (\n    <div className=\"greeting\">\n      <p>Welcome Back!</p>\n    </div>\n  );\n};\n\nexport default Greet;\n","import React from \"react\";\n\nconst Layout = (props) => {\n  return <div className=\"main\">{props.children}</div>;\n};\n\nexport default Layout;\n","import { Switch, Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport Auth from \"./components/Pages/Auth\";\nimport Dashboard from \"./components/Pages/Dashboard/Dashboard\";\nimport Greet from \"./components/Pages/Greet\";\nimport Layout from \"./components/Pages/Layout\";\n\nimport \"./App.scss\";\nimport { Fragment } from \"react\";\n\nconst App = () => {\n  const localId = useSelector((state) => state.user.userId.localId);\n\n  return (\n    <Switch>\n      <Layout>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/auth\" />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        {localId && (\n          <Fragment>\n            <Route path=\"/greet\">\n              <Greet />\n            </Route>\n            <Route path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n          </Fragment>\n        )}\n      </Layout>\n    </Switch>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport userSlice from \"./user\";\n\nconst store = configureStore({\n  reducer: {\n    user: userSlice,\n  },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}